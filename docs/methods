---
title: "phyloNEON"
---



This is from https://github.com/NEONScience/phyloNEON/blob/main/README.md and  https://github.com/NEONScience/phyloNEON/blob/main/docs/metagenomic/README.md


A set of tools in R and Python to run phylogenetic and taxonomic analyses on NEON and related data

## Installation

To install phyloNEON, you will need the `devtools` package.

```
library(devtools)

install_github("NEONScience/phyloNEON/phyloNEON")

```

## Accessing and using NEON genetic data 

NEON offers several data products that include genetic data. This repository is being developed to include tools and guidelines to help users of NEON data to better utilize the genetic data. 

### NEON metagenomic data

DNA is extracted from NEON soil and aquatic samples and sequenced with a shotgun sequence library prep. Through collaborations with the Joint Genome Institute (JGI) and the National Microbime Collaborative Network (NMDC), most of the metagenomic sequencing data are available on the data portals of these organizations. Connections to these external data sources are being built into NEON data releases. The phyloNEON package also offers some tools and guidelines to help the user find and analyze NEON metagenomic data on the JGI/NMDC data portals. 

[This page on the repo](docs/metagenomic/README.md) (in `docs/metagenomic/README.md`) will help you get started


# Getting started with NEON metagenomic data

We have provided some tools and guidelines to help users access NEON metagenomic data on the JGI and NMDC data portals.

## Accessing NEON samples on the JGI IMG data portal

### NEON metagenome database

A table (`neon.metaDB`) has been added to the phyloNEON package that contains over 1,800 NEON metagenome samples that are on the JGI IMG data portal. This includes legacy data as well as all samples that are part of the [JGI CSP award](https://www.neonscience.org/impact/observatory-blog/update-changing-neon-microbial-data), which covers deep sequencing and analysis by JGI of all NEON metagenome samples collected in 2023 and 2024. Included in the table are several fields with JGI metadata and statistics for each sample, such as `Sequencing Method`, `GenomeSize`, `GeneCount`, and number of bins (`metaBATbinCount`). Also included are some NEON variables such as `siteID` and `collectDate`, as well as multiple environmental terms assigned to each sample according to ENVO specifications (e.g. `Ecosystem Category`, `Ecosystem Type`, `Specific Ecosystem`). The table also has reference codes for the Genome Online Database (GOLD), including `GOLD Analysis Project ID` and `GOLD Study ID`; and the taxon OID (`imgGenomeID`) that allows accessing the sample on the JGI IMG data portal.

This table is available when you load the package `phyloNEON`. 



```{r}
library(tidyverse)
library(lubridate)
library(phyloNEON)
library(DT)
library(viridis)
```


Save file to have version used



```{r, eval=FALSE}
write_csv(neon.metaDB, "../data/NEON_metadata/neon.metaDB_20250701.csv")
```

```{r, eval=FALSE}
neon.metaDB <- read_csv("../data/NEON_metadata/neon.metaDB_20250701.csv")
```



To view the table neon.metaDB (Note set eval = FALSE or do not include in your R code or you will get an error when rendering)



```{r, eval=FALSE}
View(neon.metaDB)
```



To view the structure of the neon.metaDB


```{r}
str(neon.metaDB)
```



Convert the collectDate from character to date format



```{r}
neon.metaDB.my <- neon.metaDB
neon.metaDB.my$collectDate <- as.numeric(neon.metaDB.my$collectDate)
neon.metaDB.my$collectDate <- ymd(neon.metaDB.my$collectDate)
str(neon.metaDB.my$collectDate)
```




### Table of mean genome size per year


```{r}
neon.metaDB.my |> 
  filter(`GOLD Analysis Project Type` != "Combined Assembly") |> 
  group_by(year = lubridate::year(collectDate)) |> 
  summarize(mean_GenomeSize = mean(GenomeSize))
```



### Table HARV mean genome size per year



```{r}
neon.metaDB.my |> 
  filter(siteID == "HARV") |> 
  group_by(year = lubridate::year(collectDate)) |> 
  summarize(mean_GenomeSize = mean(GenomeSize))
```



### Plot of genome size per year



```{r}
neon.metaDB.my |> 
  ggplot(aes(x=collectDate, y = GenomeSize)) +
  geom_col(colour = "maroon", fill = "maroon") +
  coord_flip()
```




To reformat dnasampleID column for terrestrial samples (This does not work for the aquatic samples)



```{r}
neon.metaDB.my.soil <- neon.metaDB.my |> 
  filter(`Ecosystem Category` == "Terrestrial") |> 
  filter(`GOLD Analysis Project Type` != "Combined Assembly") |> 
  
  separate(`dnaSampleID`, c("dnaSampleID.site","dnaSampleID.sub"), "_", remove=FALSE) |> 
  
  mutate_at("dnaSampleID.sub", str_replace, "-COMP", "_COMP") |>
  mutate_at("dnaSampleID.sub", str_replace, "-GEN", "_GEN") |>
  separate(`dnaSampleID.sub`, c("dnaSampleID.sub","dnaSampleID.type"), "_") |> 
  
  mutate_at("dnaSampleID.sub", str_replace, "-M", "_M") |>
  mutate_at("dnaSampleID.sub", str_replace, "-O", "_O") |>
  separate(`dnaSampleID.sub`, c("dnaSampleID.plot","dnaSampleID.sub"), "_") |> 
  
  mutate_at("dnaSampleID.sub", str_replace, "M-", "M_") |>
  mutate_at("dnaSampleID.sub", str_replace, "O-", "O_") |>
  separate(`dnaSampleID.sub`, c("dnaSampleID.layer","dnaSampleID.sub"), "_") |> 

  mutate_at("dnaSampleID.sub", str_replace, "-201", "201") |>
  mutate_at("dnaSampleID.sub", str_replace, "-202", "202") |>
  mutate_at("dnaSampleID.sub", str_replace, "201", "_201") |>
  mutate_at("dnaSampleID.sub", str_replace, "202", "_202") |>
  separate(`dnaSampleID.sub`, c("dnaSampleID.subplot","dnaSampleID.date"), "_") |> 

  unite(plotID, c(dnaSampleID.site, dnaSampleID.plot), sep='_', remove=FALSE)

neon.metaDB.my.soil$dnaSampleID.data <- as.numeric(neon.metaDB.my.soil$dnaSampleID.date)
neon.metaDB.my.soil$dnaSampleID.date <- ymd(neon.metaDB.my.soil$dnaSampleID.date)
```




To reformat dnasampleID column for aquatic samples



```{r}
neon.metaDB.my.aquatic <- neon.metaDB.my |> 
  filter(`Ecosystem Category` == "Aquatic") |> 
  filter(`GOLD Analysis Project Type` != "Combined Assembly") |> 
  
  mutate(dnaSampleID.sub = dnaSampleID) |> 
  mutate_at("dnaSampleID.sub", str_replace, ".202", "_202") |>
  separate(`dnaSampleID.sub`, c("dnaSampleID.site","dnaSampleID.sub"), "_") |> 
  separate(`dnaSampleID.site`, c("dnaSampleID.site","dnaSampleID.code"), "\\.") |> 
  
  mutate_at("dnaSampleID.sub", str_replace, ".DNA", "_DNA") |>
  separate(`dnaSampleID.sub`, c("dnaSampleID.sub","dnaSampleID.type"), "_") |> 
  
  separate(`dnaSampleID.sub`, c("dnaSampleID.data","dnaSampleID.niche", "dnaSampleID.num"), "\\.") |> 

  unite(dnaSampleID.niche, c(dnaSampleID.code, dnaSampleID.niche)) |> 
  mutate_at("dnaSampleID.niche", str_replace, "NA_", "") |>
  mutate_at("dnaSampleID.niche", str_replace, "_NA", "")
```




### HARV metagenomes by year and plot



```{r}
datatable(
neon.metaDB.my.soil |> 
  filter(siteID == "HARV") |> 
  group_by(Year = lubridate::year(collectDate), dnaSampleID.plot) |> 
  count() |> 
  pivot_wider(names_from = dnaSampleID.plot, values_from = n) |> 
  mutate_all(funs(replace_na(.,0)))
)
```



### WREF metagenomes by year and plot



```{r}
datatable(
neon.metaDB.my.soil |> 
  filter(siteID == "WREF") |> 
  group_by(Year = lubridate::year(collectDate), dnaSampleID.plot) |> 
  count() |> 
  pivot_wider(names_from = dnaSampleID.plot, values_from = n) |> 
  mutate_all(funs(replace_na(.,0)))
)
```




### Plot of HARV samples per plot per year



```{r}
neon.metaDB.my.soil |> 
  filter(siteID == "HARV") |> 
  group_by(Year = lubridate::year(collectDate), dnaSampleID.plot) |> 
  count() |> 
  pivot_wider(names_from = dnaSampleID.plot, values_from = n) |> 
  mutate_all(funs(replace_na(.,0))) |> 
  pivot_longer(!Year, names_to = "plot", values_to = "metagenomes") |> 
  ggplot(aes(x=Year, y = plot)) +
  geom_tile(aes(fill = metagenomes)) +
  scale_fill_viridis(discrete=FALSE, direction = -1) +
  scale_x_continuous(breaks = seq(2013, 2023, by = 1)) 
```


### Missing years at HARV

All sites are missing data from 2021 and 2022. That should be in IMG soon. What about 2018?


#### CollectDate


```{r}
neon.metaDB.my.soil |> 
  group_by(Year = lubridate::year(collectDate)) |> 
  count() 
```



#### dnaSampleID.date


```{r}
neon.metaDB.my.soil |> 
  group_by(Year = lubridate::year(dnaSampleID.date)) |> 
  count() 
```



### Plot of samples per plot per year at all sites



```{r, fig.height = 30}
neon.metaDB.my.soil |> 
  group_by(siteID, Year = lubridate::year(collectDate), dnaSampleID.plot) |> 
  count() |> 
  pivot_wider(names_from = Year, values_from = n) |> 
  mutate_all(funs(replace_na(.,0))) |> 
  pivot_longer(!c(siteID, dnaSampleID.plot), names_to = "Year", values_to = "metagenomes") |> 
  ggplot(aes(x=Year, y = dnaSampleID.plot)) +
  geom_tile(aes(fill = metagenomes)) +
  scale_fill_viridis(discrete=FALSE, direction = -1) +
 # scale_x_continuous(breaks = seq(2013, 2023, by = 1)) +
  facet_wrap(~siteID, scales ="free_y", ncol = 3) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) 
```

